apiVersion: v1
kind: Namespace
metadata:
  name: web-ui
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: web-ui
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend
  namespace: web-ui
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: view-nodes
  namespace: web-ui
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get","list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: read-nodes
  namespace: web-ui
subjects:
- kind: ServiceAccount
  name: frontend
  namespace: web-ui
roleRef:
  kind: ClusterRole
  name: view-nodes
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: web-ui
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: frontend
      containers:
        - name: server
          image: gcr.io/solo-test-236622/frontend:solo-build
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
                - name: "Cookie"
                  value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
                - name: "Cookie"
                  value: "shop_session-id=x-liveness-probe"
          env:
            - name: PORT
              value: "8080"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "productcatalogservice.backend-apis.svc.cluster.local:3550"
            - name: CURRENCY_SERVICE_ADDR
              value: "currencyservice.backend-apis.svc.cluster.local:7000"
            - name: CART_SERVICE_ADDR
              value: "cartservice.backend-apis.svc.cluster.local:7070"
            - name: RECOMMENDATION_SERVICE_ADDR
              value: "recommendationservice.backend-apis.svc.cluster.local:8080"
            - name: SHIPPING_SERVICE_ADDR
              value: "localhost:50051"
            - name: CHECKOUT_SERVICE_ADDR
              value: "localhost:5050"
            - name: AD_SERVICE_ADDR
              value: "adservice.backend-apis.svc.cluster.local:9555"
            # # ENV_PLATFORM: One of: local, gcp, aws, azure, onprem
            # # When not set, defaults to "local" unless running in GKE, otherwies auto-sets to gcp
            - name: ENV_PLATFORM
              value: "onprem"
            - name: DISABLE_TRACING
              value: "1"
            - name: DISABLE_PROFILER
              value: "1"
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: KUBERNETES_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBERNETES_CLUSTER_NAME
              value: cluster1
            - name: CART_DISABLED
              value: "true"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loadgenerator
  namespace: web-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
  namespace: web-ui
spec:
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: loadgenerator
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      containers:
      - name: main
        image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.3.5
        env:
        - name: FRONTEND_ADDR
          value: "frontend.web-ui.svc.cluster.local:80"
        - name: USERS
          value: "2"
        resources:
          requests:
            cpu: 300m
            memory: 256Mi
---

apiVersion: v1
kind: Service
metadata:
  name: loadgenerator
  namespace: web-ui
  labels:
    app: loadgenerator
spec:
  type: ClusterIP
  selector:
    app: loadgenerator
  ports:
  - name: http
    port: 80
    targetPort: 8080
